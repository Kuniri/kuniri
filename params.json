{"name":"Kuniri","tagline":"kuniri","body":"# KUNIRI\r\n\r\n----\r\n\r\n[![Join the chat at https://gitter.im/rodrigosiqueira/kuniri](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/rodrigosiqueira/kuniri?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\n[![Build Status](https://travis-ci.org/Kuniri/kuniri.svg?branch=master)](https://travis-ci.org/Kuniri/kuniri)\r\n[![Code Climate](https://codeclimate.com/github/Kuniri/kuniri/badges/gpa.svg)](https://codeclimate.com/github/Kuniri/kuniri)\r\n[![Stories in Ready](https://badge.waffle.io/Kuniri/kuniri.svg?label=ready&title=Ready)](http://waffle.io/Kuniri/kuniri)\r\n[![Coverage Status](https://coveralls.io/repos/Kuniri/kuniri/badge.svg?branch=master&service=github)](https://coveralls.io/github/Kuniri/kuniri?branch=master)\r\n[![Inline docs](http://inch-ci.org/github/Kuniri/kuniri.svg?branch=master)](http://inch-ci.org/github/Kuniri/kuniri)\r\n[![Gem Version](https://badge.fury.io/rb/kuniri.svg)](http://badge.fury.io/rb/kuniri)\r\n[![License](https://img.shields.io/badge/license-LGPLv3-green.svg)](https://github.com/Kuniri/kuniri/blob/master/COPYING)\r\n\r\n----\r\n# What is Kuniri?\r\n\r\n<img src=\"https://github.com/kuniri/kuniri/wiki/logo/256px/with_round_border.png\" alt=\"Kuniri\" align=\"left\" />\r\n> Briefly, the main goal of Kuniri is: parse any kind of language, and generate\r\na common model file with code information. We believe that Kuniri can be a base\r\ntool for other tools, like a diagram generator, traceability, code quality,\r\ndocumentation, and so forth. Initially, the main objective of Kuniri was to\r\nprovide a way to dynamically generate diagrams and traceability based on code.\r\nHowever, the parser proved much more useful for many other kinds of\r\napplications; thus, the focus shifted to the parser creation.\r\n\r\n> Kuniri will inspect the source code, and extract information to generate a\r\nfinal output. This file is a XML file (and other types in the near future), and\r\nfollows a strong pattern. This feature gives flexibility to other tools read the\r\nfile and process anything they want.\r\n\r\n> Additionally, Kuniri was designed to grow to two main directions: support for\r\ndifferent languages, and provide ways to select which kind of information to\r\nextract from the code.\r\n\r\n----\r\n## What is the the meaning of \"kuniri\"?\r\n\r\n> Kuniri is an Esperanto word which means \"go with\" or \"follow\". This name was\r\nchosen because of the idea to keep following your code project with diagrams,\r\ntraceability, code quality and others.\r\n\r\n----\r\n# Development\r\n\r\n* System Dependencies\r\n * YARD 0.8\r\n * RSpec 3.1.7\r\n * Rake 10.4\r\n * Guard-rspec 4.2\r\n* Ruby version: 2.1\r\n\r\n----\r\n# Install\r\n\r\n> Kuniri can be installed with:\r\n\r\n```\r\nrake install\r\n```\r\n\r\n> After installing you can check the commands with:\r\n\r\n```\r\nkuniri -h\r\n```\r\n\r\n> Or you can install the stable version with:\r\n\r\n```\r\ngem install kuniri\r\n```\r\n\r\n----\r\n# How to use\r\n\r\n> You have two different approaches to using kuniri: command line and\r\nconfiguration file.\r\n\r\n## Command line\r\n\r\n> Command line is the practical and easy way to use kuniri. You just have to\r\nuse a similar command as the one described below:\r\n\r\n```\r\nkuniri path/to/your/source/code -o path/to/kuniri/output -l ruby\r\n```\r\n\r\n> First parameter is the source code path. ***\"-o\"***, means ***\"output\"*** and\r\nyou can indicate the path that you want to put the final output. Finally\r\n***-l***, indicate which kind of language your project is.\r\n\r\n## Using configuration file\r\n\r\n> If you chose to use a configuration file, first you have to create\r\n\".kuniri.yml\" file. The example below shows the basic syntax:\r\n\r\n```\r\n:language: ruby\r\n:source: lib/\r\n:output: bin/\r\n```\r\n\r\n> First parameter, ***\"language\"***, indicates what kind of language kuniri\r\nwill parse (unfortunately, we just have ruby language now). Second parameter\r\nis ***\"source\"***, and it is used for specifying the target folder to be parsed\r\nby kuniri. Finally the third parameter is ***\"output\"***, and you can use it to\r\nindicate which folder kuniri will put the final output.\r\n\r\n> Finally, you can execute kuniri with the command below:\r\n\r\n```\r\nkuniri -e [file_name_output.xml]\r\n```\r\n\r\n***-e*** means \"extract mode\".\r\n\r\n# How to contact us?\r\n\r\nYou can contact us by:\r\n\r\n1. Mailing list: https://groups.google.com/forum/#!forum/kuniri\r\n2. Gitter: https://gitter.im/rodrigosiqueira/kuniri\r\n3. Irc: Connect to freenode, at kuniri\r\n\r\n----\r\n# Author\r\n\r\n* Rodrigo Siqueira de Melo\r\n * siqueira@kuniri.org\r\n* Gustavo Jaruga\r\n * jaruga@kuniri.org\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}